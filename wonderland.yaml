{{if eq (env `ENV`) "prod"}}
scale: 2
{{else}}
scale: 1
{{end}}
components:
  - name: {{ env `SERVICE_NAME` }}
    image: {{ env `IMAGE_TAG` }}
    capacity:
      memory: XL
      CPU: XXL
    env:
      {{if eq (env `ENV`) "prod"}}
      KAFKA_BOOTSTRAP_SERVERS: PLAINTEXT://b-1.kafka-prod.97umec.c6.kafka.eu-west-1.amazonaws.com:9092,PLAINTEXT://b-2.kafka-prod.97umec.c6.kafka.eu-west-1.amazonaws.com:9092,PLAINTEXT://b-3.kafka-prod.97umec.c6.kafka.eu-west-1.amazonaws.com:9092
      KAFKA_SCHEMA_REGISTRY_URL: https://schema-registry-engineering-prod.jimdo-platform.net
      KAFKA_CONSUMER_AUTO_OFFSET_RESET: latest
      KAFKA_CONSUMER_GROUP_ID: {{ env `SERVICE_NAME` }}-consumer-group
      {{else}}
      KAFKA_BOOTSTRAP_SERVERS: PLAINTEXT://b-1.kafka-stage.zx7dlr.c6.kafka.eu-west-1.amazonaws.com:9092,PLAINTEXT://b-2.kafka-stage.zx7dlr.c6.kafka.eu-west-1.amazonaws.com:9092,PLAINTEXT://b-3.kafka-stage.zx7dlr.c6.kafka.eu-west-1.amazonaws.com:9092
      KAFKA_SCHEMA_REGISTRY_URL: https://schema-registry-engineering-stage.jimdo-platform.net
      KAFKA_CONSUMER_AUTO_OFFSET_RESET: latest
      KAFKA_CONSUMER_GROUP_ID: {{ env `SERVICE_NAME` }}-stage-consumer-group
      {{end}}
      KAFKA_TOPIC_USER_IMAGE_TO_PROCESS: sharp-images-to-process
      KAFKA_TOPIC_USER_IMAGE_PROCESSED: sharp-processed-images
      KAFKA_CONSUMER_POLLING_TIMEOUT_SECONDS: 30
      # An image took 1098sec to process with restricted resources (0.5CPU, 512M).
      # KAFKA_MAX_POLL_INTERVAL_MS is set to ~3x the processing of that image.
      KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS: 3000000
      MODEL_NAME: noise-cancel
      MODEL_BY_PATCH_OF_SIZE: 30
      MODEL_BATCH_SIZE: 13
      MODEL_PADDING_SIZE: 13
      AWS_DEFAULT_PROFILE: ecs
      AWS_SDK_LOAD_CONFIG: "true"
    logging:
      types:
        - json
notifications:
  slack: "#sharp-bots"
